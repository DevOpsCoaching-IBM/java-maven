@Library('test') _

pipeline {
    
agent any
 stages {
         stage('stage 00'){
             steps{
                 script{
                     
      step([$class: 'GitHubCommitStatusSetter',
            contextSource: [$class: 'ManuallyEnteredCommitContextSource',context: 'Test Context'],
             statusResultSource: [$class: 'ConditionalStatusResultSource',                            results: [[$class: 'AnyBuildResult',
                                            message: 'test message',
                                            state: 'SUCCESS']]]])
                 }
             }
         }
     stage('first'){
         steps{
             script {
                logs.info 'Starting'
                logs.warning 'Nothing to do!'
                sayHello()
                sayHello
                sayHello('sdf')
                setGitHubPullRequestStatus
                
             }
         }
     }
 }

}
